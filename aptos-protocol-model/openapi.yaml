openapi: 3.0.3
info:
  title: aptos-protocol-model
  version: v0.1
paths:
components:
  schemas:
    AptosError:
      title: Response Error
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
        message:
          type: string
        aptos_ledger_version:
          $ref: '#/components/schemas/LedgerVersion'
    EventKey:
      title: Event Key
      type: string
      format: hex
      description: |
        Event key is a global index for an event stream.

        It is hex-encoded BCS bytes of `EventHandle` `guid` field value, which is
        a combination of a `uint64` creation number and account address
        (without trimming leading zeros).

        For example, event key `0x00000000000000000000000000000000000000000a550c18`
        is combined by the following 2 parts:
          1. `0000000000000000`: `uint64` representation of `0`.
          2. `0000000000000000000000000a550c18`: 16 bytes of account address.
      example: "0x00000000000000000000000000000000000000000a550c18"
    HexEncodedBytes:
      title: Hex-encoded Bytes
      type: string
      format: hex
      description: |
        All bytes data are represented as hex-encoded string prefixed with `0x` and fulfilled with
        two hex digits per byte.

        Different with `Address` type, hex-encoded bytes should not trim any zeros.
      example: "0x88fbd33f54e1126269769780feb24480428179f552e2313fbe571b72e62a1ca1"
    MoveModuleId:
      title: Move Module ID
      type: string
      description: |
        Move module id is a string representation of Move module.
        
        Format: "{address}::{module name}"
        
        `address` should be hex-encoded 16 bytes account address
        that is prefixed with `0x` and leading zeros are trimmed.
        
        Module name is case-sensitive.
        
        See [doc](https://diem.github.io/move/modules-and-scripts.html#modules) for more details.
      example: "0x1::Aptos"
    AptosAddress:
      title: Account Address
      type: string
      format: address
      description: |
        Hex-encoded 16 bytes Aptos account address.

        Prefixed with `0x` and leading zeros are trimmed.

        See [doc](https://diem.github.io/move/address.html) for more details.
      example: "0xdd"
    LedgerInfo:
      title: Ledger Information
      type: object
      required:
        - chain_id
        - ledger_version
        - ledger_timestamp
      properties:
        chain_id:
          type: integer
          example: 4
          description: |
            The blockchain chain id.
        ledger_version:
          $ref: '#/components/schemas/LedgerVersion'
        ledger_timestamp:
          $ref: '#/components/schemas/TimestampUsec'
    LedgerVersion:
      title: Ledger Version
      type: string
      format: uint64
      description: |
        The version of the latest transaction in the ledger.
      example: "52635485"
    TimestampUsec:
      title: Timestamp in Microseconds
      type: string
      format: uint64
      description: |
        Timestamp in microseconds, e.g. ledger / block creation timestamp.
      example: "1632507671675208"
    TokenId:
      title: token Id
      type: string
      format: string
      description:
        token id is the unique identifier of a token.
        It consists of 3 parts joined with "::".
        The 3 parts are ${creator_address}::${collection_name}::${token_name}
      example: "0x1::APE::LASER_APE"
    TokenIds:
      type: object
      properties:
        ids:
          type: array
          description: "List of token Ids "
          items:
            $ref: "#/components/schemas/TokenId"
    Royalty:
      type: object
      properties:
        account:
          $ref: "#/components/schemas/AptosAddress"
        value:
          type: integer
    Royalties:
      type: object
      properties:
        royalties:
          type: array
          items:
            $ref: "#/components/schemas/Royalty"
    Tokens:
      title: Tokens
      type: object
      properties:
        tokens:
          type: array
          items:
            $ref: "#/components/schemas/Token"
    Token:
      title: Token
      type: object
      description: Aptos Token data
      properties:
        id:
          $ref: "#/components/schemas/TokenId"
        contract:
          $ref: '#/components/schemas/MoveModuleId'
        creator:
          $ref: "#/components/schemas/AptosAddress"
        supply:
          type: integer
        royalties:
          $ref: "#/components/schemas/Royalties"
        deleted:
          type: boolean
          example: False
        max:
          type: integer
          description: The max number of this token
        uri:
          type: string
          description: The link to the json metadata of the token
        mintedAt:
          type: string
          format: date-time
          description: "Date and time of the token first minting"
      required:
        - id
        - contract
        - creator
        - supply
        - uri
        - mintedAt
    CollectionId:
      title: Collection Id
      description: A Id of a collection with the format of ${creator_address}::${collection_name}
      type: string
      example: "0x1::my_awesome_collection"
    Collection:
      title: NFT collection
      description: A collection of tokens
      type: object
      properties:
        id:
          $ref: "#/components/schemas/CollectionId"
        name:
          type: string
        creator:
          $ref: "#/components/schemas/AptosAddress"
        maxSupply:
          type: integer
        count:
          type: integer
          example: 1
          description: the number of tokens in this collection
        description:
          type: string
        uri:
          type: string
      required:
        - id
        - name
        - creator
        - description
        - uri
        - count
    Collections:
      title: Collections
      type: object
      properties:
        tokens:
          type: array
          items:
            $ref: "#/components/schemas/Collection"
    OwnershipId:
      type: string
      description: Ownership Id has the format of "${tokenID}::${ownerAddress}"
      example:
    OwnershipSource:
      type: string
      enum:
        - MINT
        - TRANSFER
    Ownership:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/OwnershipId"
        tokenId:
          $ref: "#/components/schemas/TokenId"
        contract:
          $ref: '#/components/schemas/MoveModuleId'
        collection:
          $ref: "#/components/schemas/CollectionId"
        owner:
          $ref: "#/components/schemas/AptosAddress"
        value:
          type: integer
          description: the number of the tokens in this ownership
        source:
          $ref: "#/components/schemas/OwnershipSource"
        createdAt:
          type: string
          format: "date-time"
        creator:
          $ref: "#/components/schemas/AptosAddress"
      required:
        - id
        - tokenId
        - collection
        - owner
        - value
        - createdAt
        - creator
    Ownerships:
      title: Ownerships
      type: object
      properties:
        ownership:
          type: array
          items:
            $ref: "#/components/schemas/Ownership"
    MintActivity:
      type: object
      properties:
        "@type":
          type: string
          enum:
            - MINT
        creator:
          $ref: "#/components/schemas/AptosAddress"
        contract:
          $ref: '#/components/schemas/MoveModuleId'
        tokenId:
          $ref: "#/components/schemas/TokenId"
        value:
          type: integer
        transactionHash:
          $ref: "#/components/schemas/HexEncodedBytes"
    ActivityId:
      $ref: "#/components/schemas/EventKey"
    UserActivityType:
      type: string
      enum:
        - TRANSFER_FROM
        - TRANSFER_TO
        - MINT
        - BURN
        - MAKE_BID
        - GET_BID
        - LIST
        - BUY
        - SELL
        - CANCEL_LIST
        - CANCEL_BID
        - AUCTION_BID
        - AUCTION_CREATED
        - AUCTION_CANCEL
        - AUCTION_FINISHED
        - AUCTION_STARTED
        - AUCTION_ENDED
    Activity:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/ActivityId"
        date:
          type: string
          format: "date-time"
        lastUpdatedAt:
          type: string
          format: "date-time"
      oneOf:
        - $ref: "#/components/schemas/MintActivity"
    Activities:
      type: object
      properties:
        ownership:
          type: array
          items:
            $ref: "#/components/schemas/Activity"
    ActivitySort:
      type: string
      enum:
        - LATEST_FIRST
        - EARLIEST_FIRST
    TokenMetaData:
      type: object
      properties:
        collection:
          type: string
          description: the name of the collection
        name:
          type: string
          description: "Name of the NFT item"
        description:
          type: string
          description: "Description of the NFT item"
        attributes:
          type: array
          description: "Attributes of the NFT item"
          items:
            "$ref": "#/components/schemas/TokenMetaAttribute"
        content:
          type: array
          description: "NFT content information"
          items:
            $ref: "#/components/schemas/MetaContent"
        raw:
          type: string
      required:
        - name
        - attributes
        - content
    TokenMetaAttribute:
      required:
        - key
      type: object
      properties:
        key:
          type: string
        value:
          type: string
        type:
          type: string
        format:
          type: string
    MetaContent:
      type: object
      properties:
        url:
          type: string
      required:
        - url
      oneOf:
        - $ref: "#/components/schemas/ImageContent"
    ImageContent:
      type: object
      properties:
        "@type":
          type: string
          enum:
            - IMAGE
        width:
          type: integer
        height:
          type: integer

    AptosTokenEvent:
      type: object
      required:
        - eventId
        - itemId
      properties:
        eventId:
          type: string
        itemId:
          type: string
      oneOf:
        - $ref: "#/components/schemas/AptosTokenUpdateEvent"
        - $ref: "#/components/schemas/AptosTokenDeleteEvent"

    AptosTokenUpdateEvent:
      type: object
      required:
        - item
        - "@type"
      properties:
        item:
          $ref: "#/components/schemas/Token"
        "@type":
          type: string
          enum:
            - UPDATE

    AptosTokenDeleteEvent:
      type: object
      required:
        - item
        - "@type"
      properties:
        item:
          $ref: "#/components/schemas/Token"
        "@type":
          type: string
          enum:
            - DELETE

    AptosOwnershipEvent:
      type: object
      required:
        - eventId
        - ownershipId
      properties:
        eventId:
          type: string
        ownershipId:
          type: string
      oneOf:
        - $ref: "#/components/schemas/AptosOwnershipUpdateEvent"
        - $ref: "#/components/schemas/AptosOwnershipDeleteEvent"

    AptosOwnershipUpdateEvent:
      type: object
      required:
        - ownership
        - "@type"
      properties:
        ownership:
          $ref: "#/components/schemas/Ownership"
        "@type":
          type: string
          enum:
            - UPDATE

    AptosOwnershipDeleteEvent:
      type: object
      required:
        - ownership
        - "@type"
      properties:
        ownership:
          $ref: "#/components/schemas/Ownership"
        "@type":
          type: string
          enum:
            - DELETE

    AptosCollectionEvent:
      type: object
      required:
        - eventId
        - collectionId
      properties:
        eventId:
          type: string
        collectionId:
          type: string
      oneOf:
        - $ref: "#/components/schemas/AptosCollectionUpdateEvent"

    AptosCollectionUpdateEvent:
      type: object
      required:
        - collection
        - "@type"
      properties:
        collection:
          $ref: "#/components/schemas/Collection"
        "@type":
          type: string
          enum:
            - UPDATE
